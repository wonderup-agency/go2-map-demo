async function e(e){e.querySelectorAll('[data-events="event-element"]').forEach((e,t)=>{const a=e.querySelector('[data-events="DD"]'),n=e.querySelector('[data-events="MMM-YYYY"]'),o=e.querySelector('[data-custom="start-end-date"]'),r=e.dataset.startDate,i=e.dataset.endDate,d=e.dataset.timezone;if(""==r||""==i)return void e.parentElement.remove();const u=new Date(r),l=new Date(i),m=new Date,y=new Date(l.toISOString()),s=new Date(m.toISOString()),f=new Date(y.getUTCFullYear(),y.getUTCMonth(),y.getUTCDate()),v=new Date(s.getUTCFullYear(),s.getUTCMonth(),s.getUTCDate());if(f.getTime()+864e5<=v.getTime())return void e.parentElement.remove();const D={timeZone:d,day:"2-digit",month:"short",year:"numeric"},c=new Intl.DateTimeFormat("en-US",D).formatToParts(u),g=c.find(e=>"day"===e.type).value,T=c.find(e=>"month"===e.type).value,p=c.find(e=>"year"===e.type).value;a.textContent=g,n.textContent=`${T} ${p}`;const h={timeZone:d,hour:"2-digit",minute:"2-digit",hour12:!0},S=new Intl.DateTimeFormat("en-US",h),w=S.formatToParts(u),C=S.formatToParts(l),U=`${w.find(e=>"hour"===e.type).value}:${w.find(e=>"minute"===e.type).value}${w.find(e=>"dayPeriod"===e.type).value} - ${C.find(e=>"hour"===e.type).value}:${C.find(e=>"minute"===e.type).value}${C.find(e=>"dayPeriod"===e.type).value}`;o.textContent=U})}export{e as default};
//# sourceMappingURL=events-CjJsppDF.js.map
