{"version":3,"file":"donation-form-DUtuuBMF.js","sources":["../src/components/forms/donation-form.js","../node_modules/postcss/lib/list.js"],"sourcesContent":["import { comma } from 'postcss/lib/list'\n\n/**\n *\n * @param {HTMLElement} form\n */\nexport default function (form) {\n  const campaignId = form.dataset.campaignId ?? 'FUNFTWMRGBN'\n\n  // Autoselect the first radio button for donation-amount if available\n  const amountRadios = form.querySelectorAll(\n    'input[name=\"donation-amount\"][type=\"radio\"]'\n  )\n  if (amountRadios.length > 0) {\n    amountRadios[0].checked = true\n  }\n\n  const otherButton = form.querySelector(\"[data-donation-form='other']\")\n\n  form.addEventListener('submit', (e) => {\n    e.preventDefault()\n    const formData = new FormData(form)\n    const recurring = formData.get('recurring') ?? 'once'\n    let amount = formData.get('donation-amount')\n\n    // Clean and parse amount; default to 25 if invalid or missing\n    amount = Number(amount?.replace(/\\D/g, '')) || 25\n\n    FundraiseUp.openCheckout(campaignId, {\n      donation: {\n        recurring,\n        amount,\n      },\n    })\n  })\n\n  otherButton.addEventListener('click', (e) => {\n    e.preventDefault()\n    const formData = new FormData(form)\n    const recurring = formData.get('recurring') ?? 'once'\n    FundraiseUp.openCheckout(campaignId, {\n      donation: {\n        recurring,\n      },\n    })\n  })\n}\n","'use strict'\n\nlet list = {\n  comma(string) {\n    return list.split(string, [','], true)\n  },\n\n  space(string) {\n    let spaces = [' ', '\\n', '\\t']\n    return list.split(string, spaces)\n  },\n\n  split(string, separators, last) {\n    let array = []\n    let current = ''\n    let split = false\n\n    let func = 0\n    let inQuote = false\n    let prevQuote = ''\n    let escape = false\n\n    for (let letter of string) {\n      if (escape) {\n        escape = false\n      } else if (letter === '\\\\') {\n        escape = true\n      } else if (inQuote) {\n        if (letter === prevQuote) {\n          inQuote = false\n        }\n      } else if (letter === '\"' || letter === \"'\") {\n        inQuote = true\n        prevQuote = letter\n      } else if (letter === '(') {\n        func += 1\n      } else if (letter === ')') {\n        if (func > 0) func -= 1\n      } else if (func === 0) {\n        if (separators.includes(letter)) split = true\n      }\n\n      if (split) {\n        if (current !== '') array.push(current.trim())\n        current = ''\n        split = false\n      } else {\n        current += letter\n      }\n    }\n\n    if (last || current !== '') array.push(current.trim())\n    return array\n  }\n}\n\nmodule.exports = list\nlist.default = list\n"],"names":["donationForm","form","campaignId","dataset","amountRadios","querySelectorAll","length","checked","otherButton","querySelector","addEventListener","e","preventDefault","formData","FormData","recurring","get","amount","Number","replace","FundraiseUp","openCheckout","donation","list","comma","string","split","space","separators","last","array","current","func","inQuote","prevQuote","escape","letter","includes","push","trim","list_1","default"],"mappings":"QAMe,SAAAA,EAAUC,GACvB,MAAMC,EAAaD,EAAKE,QAAQD,YAAc,cAGxCE,EAAeH,EAAKI,iBACxB,+CAEED,EAAaE,OAAS,IACxBF,EAAa,GAAGG,SAAU,GAG5B,MAAMC,EAAcP,EAAKQ,cAAc,gCAEvCR,EAAKS,iBAAiB,SAAWC,IAC/BA,EAAEC,iBACF,MAAMC,EAAW,IAAIC,SAASb,GACxBc,EAAYF,EAASG,IAAI,cAAgB,OAC/C,IAAIC,EAASJ,EAASG,IAAI,mBAG1BC,EAASC,OAAOD,GAAQE,QAAQ,MAAO,MAAQ,GAE/CC,YAAYC,aAAanB,EAAY,CACnCoB,SAAU,CACRP,YACAE,cAKNT,EAAYE,iBAAiB,QAAUC,IACrCA,EAAEC,iBACF,MACMG,EADW,IAAID,SAASb,GACHe,IAAI,cAAgB,OAC/CI,YAAYC,aAAanB,EAAY,CACnCoB,SAAU,CACRP,gBAIR,+BC5CA,IAAIQ,EAAO,CACTC,MAAMC,GACGF,EAAKG,MAAMD,EAAQ,CAAC,MAAM,GAGnCE,MAAMF,GAEGF,EAAKG,MAAMD,EADL,CAAC,IAAK,KAAM,OAI3B,KAAAC,CAAMD,EAAQG,EAAYC,GACxB,IAAIC,EAAQ,GACRC,EAAU,GACVL,GAAQ,EAERM,EAAO,EACPC,GAAU,EACVC,EAAY,GACZC,GAAS,EAEb,IAAK,IAAIC,KAAUX,EACbU,EACFA,GAAS,EACW,OAAXC,EACTD,GAAS,EACAF,EACLG,IAAWF,IACbD,GAAU,GAEQ,MAAXG,GAA6B,MAAXA,GAC3BH,GAAU,EACVC,EAAYE,GACQ,MAAXA,EACTJ,GAAQ,EACY,MAAXI,EACLJ,EAAO,IAAGA,GAAQ,GACJ,IAATA,GACLJ,EAAWS,SAASD,KAASV,GAAQ,GAGvCA,GACc,KAAZK,GAAgBD,EAAMQ,KAAKP,EAAQQ,QACvCR,EAAU,GACVL,GAAQ,GAERK,GAAWK,EAKf,OADIP,GAAoB,KAAZE,IAAgBD,EAAMQ,KAAKP,EAAQQ,QACxCT,CACX,GAGAU,EAAiBjB,EACjBA,EAAKkB,QAAUlB","x_google_ignoreList":[1]}