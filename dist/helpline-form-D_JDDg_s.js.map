{"version":3,"file":"helpline-form-D_JDDg_s.js","sources":["../src/utils/functions.js","../src/components/forms/helpline-form.js"],"sourcesContent":["/**\n * Serialize inputs under a root element into an object suitable for POSTing.\n * Handles types: checkbox, radio, text, date, email, hidden, number, range, tel, select\n *\n * Usage:\n *   import { serializeInputs } from './utils/functions.js'\n *   const payload = serializeInputs(document.getElementById('root'))\n *\n * @param {HTMLElement} root\n * @returns {Object}\n */\nexport function serializeInputs(root) {\n  if (!root || typeof root.querySelectorAll !== 'function') {\n    throw new TypeError('serializeInputs expects a DOM element as the root')\n  }\n\n  // include select and textarea elements in the query\n  const inputs = Array.from(root.querySelectorAll('input, select, textarea'))\n  const groups = inputs.reduce((acc, input) => {\n    const name = input.name\n    if (!name)\n      return acc // skip inputs without a name\n    ;(acc[name] || (acc[name] = [])).push(input)\n    return acc\n  }, {})\n\n  const safeNumber = (v) => {\n    if (v === '') return null\n    const n = Number(v)\n    return Number.isFinite(n) ? n : v\n  }\n\n  const result = {}\n\n  for (const name in groups) {\n    const nodes = groups[name]\n    const first = nodes[0]\n    const tag = (first.tagName || '').toLowerCase()\n    const type = (first.type || '').toLowerCase()\n\n    // handle select elements\n    if (tag === 'select') {\n      if (nodes.length === 1) {\n        const s = nodes[0]\n        if (s.multiple) {\n          result[name] = Array.from(s.selectedOptions).map((o) => o.value)\n        } else {\n          result[name] = s.value\n        }\n      } else {\n        // multiple select elements sharing the same name -> array of values/arrays\n        result[name] = nodes.map((n) => {\n          if ((n.tagName || '').toLowerCase() === 'select') {\n            return n.multiple\n              ? Array.from(n.selectedOptions).map((o) => o.value)\n              : n.value\n          }\n          return n.value\n        })\n      }\n      continue\n    }\n\n    if (type === 'checkbox') {\n      if (nodes.length > 1) {\n        // multiple checkboxes with same name -> array of checked values\n        result[name] = nodes.filter((n) => n.checked).map((n) => n.value)\n      } else {\n        // single checkbox -> boolean if no explicit value, otherwise value or null when unchecked\n        const n = nodes[0]\n        const hasExplicitValue = n.hasAttribute('value')\n        if (!hasExplicitValue) {\n          result[name] = !!n.checked\n        } else {\n          result[name] = n.checked ? n.value : null\n        }\n      }\n      continue\n    }\n\n    if (type === 'radio') {\n      const checked = nodes.find((n) => n.checked)\n      result[name] = checked ? checked.value : null\n      continue\n    }\n\n    if (type === 'number' || type === 'range') {\n      if (nodes.length === 1) {\n        result[name] = safeNumber(nodes[0].value)\n      } else {\n        result[name] = nodes.map((n) => safeNumber(n.value))\n      }\n      continue\n    }\n\n    // text, textarea, date, email, hidden, tel and any other fallback types\n    if (nodes.length === 1) {\n      result[name] = nodes[0].value\n    } else {\n      result[name] = nodes.map((n) => n.value)\n    }\n  }\n\n  return result\n}\n","import { serializeInputs } from '../../utils/functions'\n\n/**\n * Handles form submission for a multi-step form component.\n * @param {HTMLElement} component - The form component containing steps and inputs.\n */\nexport default function (component) {\n  const webhookAddress =\n    component.dataset.webhook ||\n    'https://hook.us2.make.com/x3fm8t3nor5poc4ij7purslvicjo9sxr'\n  const steps = component.querySelectorAll('[data-form=\"step\"]')\n  const ticketIdField = component.querySelector(\n    '[data-helpline-form=\"ticket-id-field\"]'\n  )\n  const nextButton = component.querySelector('[data-form=\"next-btn\"]')\n  const nextButtonInitialText = nextButton.firstChild.textContent\n\n  const submitButton = component.querySelector('[data-form=\"submit-btn\"]')\n  const submitButtonInitialText = submitButton.firstChild.textContent\n\n  const successEl = component.querySelector('.w-form-done')\n  const failEl = component.querySelector('.w-form-fail')\n  const formEl = component.querySelector('form')\n\n  if (ticketIdField) {\n    ticketIdField.disabled = true\n    ticketIdField.type = 'hidden'\n  }\n\n  nextButton.addEventListener(\n    'click',\n    (e) => {\n      // Skip processing for synthetic (dispatched) events â€“ let Formly handle them\n      if (!e.isTrusted) return\n\n      if (e.currentTarget.classList.contains('disabled')) {\n        e.preventDefault()\n        e.stopImmediatePropagation()\n        return\n      }\n\n      // Prevent Formly from advancing immediately\n      e.preventDefault()\n      e.stopImmediatePropagation()\n\n      const firstStepData = serializeInputs(steps[0])\n\n      // Disable button during async fetch\n      nextButton.disabled = true\n      nextButton.classList.add('disabled')\n      nextButton.firstChild.textContent = 'Please wait...'\n\n      fetch(webhookAddress, {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(firstStepData),\n      })\n        .then((response) => {\n          if (!response.ok) throw new Error('Submission failed')\n          return response.json()\n        })\n        .then((data) => {\n          if (ticketIdField) {\n            ticketIdField.value = data || ''\n          }\n          // Dispatch synthetic click to trigger Formly's step advancement\n          const syntheticClick = new MouseEvent('click', {\n            bubbles: true,\n            cancelable: true,\n            view: window,\n          })\n          nextButton.dispatchEvent(syntheticClick)\n        })\n        .catch((error) => {\n          if (failEl) {\n            failEl.style.display = 'block'\n            failEl.setAttribute('aria-hidden', 'false')\n            failEl.setAttribute('tabindex', '-1')\n            setTimeout(() => failEl.focus(), 50)\n          }\n        })\n        .finally(() => {\n          nextButton.disabled = false\n          nextButton.classList.remove('disabled')\n          nextButton.firstChild.textContent = nextButtonInitialText\n        })\n    },\n    true // Capture phase to intercept before Formly\n  )\n\n  submitButton.addEventListener(\n    'click',\n    (e) => {\n      e.preventDefault()\n      e.stopImmediatePropagation()\n\n      if (ticketIdField?.value) {\n        const secondStepData = serializeInputs(steps[1])\n        secondStepData['ticket-id'] = ticketIdField.value\n\n        submitButton.disabled = true\n        submitButton.classList.add('disabled')\n        submitButton.firstChild.textContent = 'Please wait...'\n\n        fetch(webhookAddress, {\n          method: 'POST',\n          headers: { 'Content-Type': 'application/json' },\n          body: JSON.stringify(secondStepData),\n        })\n          .then((response) => {\n            if (!response.ok) throw new Error('Submission failed')\n            return response.json()\n          })\n          .then((data) => {\n            if (formEl) {\n              formEl.style.display = 'none'\n              formEl.setAttribute('aria-hidden', 'true')\n            }\n            if (failEl) {\n              failEl.style.display = 'none'\n              failEl.setAttribute('aria-hidden', 'true')\n            }\n\n            if (successEl) {\n              successEl.style.display = 'block'\n              successEl.setAttribute('aria-hidden', 'false')\n              successEl.setAttribute('tabindex', '-1')\n              setTimeout(() => successEl.focus(), 50)\n            }\n          })\n          .catch((error) => {\n            if (formEl) {\n              formEl.setAttribute('aria-hidden', 'true')\n            }\n            if (successEl) {\n              successEl.style.display = 'none'\n              successEl.setAttribute('aria-hidden', 'true')\n            }\n\n            if (failEl) {\n              failEl.style.display = 'block'\n              failEl.setAttribute('aria-hidden', 'false')\n              failEl.setAttribute('tabindex', '-1')\n              setTimeout(() => failEl.focus(), 50)\n            }\n          })\n          .finally(() => {\n            submitButton.disabled = false\n            submitButton.classList.remove('disabled')\n            submitButton.firstChild.textContent = submitButtonInitialText\n          })\n      } else {\n        alert('There was an error updating your information...')\n      }\n    },\n    true\n  )\n}\n"],"names":["serializeInputs","root","querySelectorAll","TypeError","groups","Array","from","reduce","acc","input","name","push","safeNumber","v","n","Number","isFinite","result","nodes","first","tag","tagName","toLowerCase","type","checked","find","value","length","map","filter","hasExplicitValue","hasAttribute","s","multiple","selectedOptions","o","helplineForm","component","webhookAddress","dataset","webhook","steps","ticketIdField","querySelector","nextButton","nextButtonInitialText","firstChild","textContent","submitButton","submitButtonInitialText","successEl","failEl","formEl","disabled","addEventListener","e","isTrusted","currentTarget","classList","contains","preventDefault","stopImmediatePropagation","firstStepData","add","fetch","method","headers","body","JSON","stringify","then","response","ok","Error","json","data","syntheticClick","MouseEvent","bubbles","cancelable","view","window","dispatchEvent","catch","error","style","display","setAttribute","setTimeout","focus","finally","remove","secondStepData","alert"],"mappings":"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"}